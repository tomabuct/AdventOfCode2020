<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>struct ElfSequence: Sequence, IteratorProtocol {
    var prefix: [Int]
    var lastSeenAt = [Int: Int]()
    var at = 0, last: (e: Int, lastSeenAt: Int?)?
    
    func peek() -&gt; Int? {
        if at &lt; prefix.count {
            return prefix[at]
            
        } else if let last = last {
            if let lastSeenLastAt = last.lastSeenAt {  
                return at - lastSeenLastAt
            } else {
                return 0
            }
            
        } else {
            return nil
        }
    }
    
    mutating func next() -&gt; Int? {
        guard let next = peek() else { return nil }
        
        at += 1
        last = (e: next, lastSeenAt: lastSeenAt[next])
        lastSeenAt[next] = at
        return next
    }
}

let input = "16,12,1,0,15,7,11"
    .split(separator: ",")
    .map { Int($0)! }

outer: for (i, e) in ElfSequence(prefix: input).enumerated() {
    switch i {
    case 2020-1:
        print(e)
        
    case 30_000_000-1:
        print(e)
        break outer
        
    default: break
    }
}
</string>
			<key>ModifiedRange</key>
			<string>{0, 1054}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
