<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>#fileLiteral(resourceName: "22.txt")
import Foundation

let path = Bundle.main.path(forResource: "22", ofType: "txt")!
let input = try! String(contentsOfFile: path)
    .trimmingCharacters(in: .newlines)
    .components(separatedBy: "\n\n")
    .map { $0
        .dropFirst(9)
        .trimmingCharacters(in: .newlines)
        .components(separatedBy: .newlines)
        .map { Int($0)! }
    }

// 1
func crabCombat(p1: [Int], p2: [Int]) -&gt; (Int, Int)  {
    var p1 = p1, p2 = p2
    while let t1 = p1.first, let t2 = p2.first {
        p1.removeFirst()
        p2.removeFirst()
        if t1 &gt; t2 {
            p1 += [t1, t2]
        } else {
            p2 += [t2, t1]
        }
    }
    return (score(forStack: p1), score(forStack: p2))
}

func score(forStack p: [Int]) -&gt; Int {
    p.reversed().enumerated().reduce(0) {
        $0 + ($1.offset + 1) * $1.element
    }
}

print(crabCombat(p1: input[0], p2: input[1]))

// 2
func crabCombat2(p1: [Int], p2: [Int]) -&gt; (Int, Int)  {
    var rounds = Set&lt;[[Int]]&gt;()
    
    var p1 = p1, p2 = p2
    c: while let t1 = p1.first, let t2 = p2.first {
        if rounds.contains([p1, p2]) { p2 = []; break c }
        rounds.insert([p1, p2])
        print([p1, p2])
        
        p1.removeFirst()
        p2.removeFirst()
        if t1 &gt; p1.count || t2 &gt; p2.count {
            if t1 &gt; t2 {
                p1 += [t1, t2]
            } else {
                p2 += [t2, t1]
            }
            
        } else {
            let (p1r, p2r) = crabCombat2(p1: p1, p2: p2)
            if p2r == 0 {
                p1 += [t1, t2]
            } else {
                p2 += [t2, t1]
            }
        }
    }
    return (score(forStack: p1), score(forStack: p2))
}

print(crabCombat2(p1: input[0], p2: input[1]))
</string>
			<key>ModifiedRange</key>
			<string>{0, 1769}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
